import os
Import("env")
Import("env_modules")

module_path = Dir('.').srcnode().abspath

module_env = env.Clone()

module_env.Append(CPPDEFINES=["GODUM_MODULE"])
module_env.Append(CPPPATH=["src", "3rdparty/steamworks_sdk/public"])

# Local dependency paths, adapt them to your setup
steam_lib_path = "%s/3rdparty/steamworks_sdk/redistributable_bin" % module_path

if env['platform'] in ('macos', 'osx'):
    # Set the correct Steam library
    steam_lib_path += "/osx"
    steamworks_library = 'libsteam_api.dylib'

elif env['platform'] in ('linuxbsd', 'linux'):
    # Set correct Steam library
    steam_lib_path += "/linux64" if env['arch'] == 'x86_64' else "/linux32"
    steamworks_library = 'libsteam_api.so'

elif env['platform'] == "windows":
    steam_lib_path += "/win64" if env['arch'] == 'x86_64' else ""
    steamworks_library = 'steam_api64.lib' if env['arch'] == 'x86_64' else 'steam_api.lib'
    # steamworks_library = 'steam_api64.lib' if env['arch'] == 'x86_64' else 'steam_api.lib'

env.Append(LIBPATH=[steam_lib_path])
# env.Append(LIBS=[
#     steamworks_library.replace(".dll", "")
# ])
env.Append(LINKFLAGS=[
    steamworks_library
])

def getSubdirs(path:str):
    result = ["src"]
    for root, folders, _ in os.walk(path):
        for folder in folders:
            result.append(os.path.join(root, folder))
    return result

# sources = Glob("*.cpp")
module_env.add_source_files(env.modules_sources, "*.cpp")
for path in getSubdirs("./src"):
    module_env.add_source_files(env.modules_sources, os.path.join(path, "*.cpp"))

